package sbox

import (
	"crypto/rand"

	"github.com/OpenWhiteBox/primitives/encoding"

	"github.com/OpenWhiteBox/Generic/constructions/fn"
	"github.com/OpenWhiteBox/Generic/constructions/spn"
)

var Random = encoding.GenerateSBox(rand.Reader)

var Fiestel = encoding.ParseByte(encoding.SerializeByte(
	fn.NewFN(rand.Reader, 5),
))

var SPN = encoding.ParseByte(encoding.SerializeByte(
	spn.NewSmallSPN(rand.Reader, spn.ASASA),
))

var SMS4 = SBoxEncoding{
	[16]byte{0xd6, 0x90, 0xe9, 0xfe, 0xcc, 0xe1, 0x3d, 0xb7, 0x16, 0xb6, 0x14, 0xc2, 0x28, 0xfb, 0x2c, 0x05},
	[16]byte{0x2b, 0x67, 0x9a, 0x76, 0x2a, 0xbe, 0x04, 0xc3, 0xaa, 0x44, 0x13, 0x26, 0x49, 0x86, 0x06, 0x99},
	[16]byte{0x9c, 0x42, 0x50, 0xf4, 0x91, 0xef, 0x98, 0x7a, 0x33, 0x54, 0x0b, 0x43, 0xed, 0xcf, 0xac, 0x62},
	[16]byte{0xe4, 0xb3, 0x1c, 0xa9, 0xc9, 0x08, 0xe8, 0x95, 0x80, 0xdf, 0x94, 0xfa, 0x75, 0x8f, 0x3f, 0xa6},
	[16]byte{0x47, 0x07, 0xa7, 0xfc, 0xf3, 0x73, 0x17, 0xba, 0x83, 0x59, 0x3c, 0x19, 0xe6, 0x85, 0x4f, 0xa8},
	[16]byte{0x68, 0x6b, 0x81, 0xb2, 0x71, 0x64, 0xda, 0x8b, 0xf8, 0xeb, 0x0f, 0x4b, 0x70, 0x56, 0x9d, 0x35},
	[16]byte{0x1e, 0x24, 0x0e, 0x5e, 0x63, 0x58, 0xd1, 0xa2, 0x25, 0x22, 0x7c, 0x3b, 0x01, 0x21, 0x78, 0x87},
	[16]byte{0xd4, 0x00, 0x46, 0x57, 0x9f, 0xd3, 0x27, 0x52, 0x4c, 0x36, 0x02, 0xe7, 0xa0, 0xc4, 0xc8, 0x9e},
	[16]byte{0xea, 0xbf, 0x8a, 0xd2, 0x40, 0xc7, 0x38, 0xb5, 0xa3, 0xf7, 0xf2, 0xce, 0xf9, 0x61, 0x15, 0xa1},
	[16]byte{0xe0, 0xae, 0x5d, 0xa4, 0x9b, 0x34, 0x1a, 0x55, 0xad, 0x93, 0x32, 0x30, 0xf5, 0x8c, 0xb1, 0xe3},
	[16]byte{0x1d, 0xf6, 0xe2, 0x2e, 0x82, 0x66, 0xca, 0x60, 0xc0, 0x29, 0x23, 0xab, 0x0d, 0x53, 0x4e, 0x6f},
	[16]byte{0xd5, 0xdb, 0x37, 0x45, 0xde, 0xfd, 0x8e, 0x2f, 0x03, 0xff, 0x6a, 0x72, 0x6d, 0x6c, 0x5b, 0x51},
	[16]byte{0x8d, 0x1b, 0xaf, 0x92, 0xbb, 0xdd, 0xbc, 0x7f, 0x11, 0xd9, 0x5c, 0x41, 0x1f, 0x10, 0x5a, 0xd8},
	[16]byte{0x0a, 0xc1, 0x31, 0x88, 0xa5, 0xcd, 0x7b, 0xbd, 0x2d, 0x74, 0xd0, 0x12, 0xb8, 0xe5, 0xb4, 0xb0},
	[16]byte{0x89, 0x69, 0x97, 0x4a, 0x0c, 0x96, 0x77, 0x7e, 0x65, 0xb9, 0xf1, 0x09, 0xc5, 0x6e, 0xc6, 0x84},
	[16]byte{0x18, 0xf0, 0x7d, 0xec, 0x3a, 0xdc, 0x4d, 0x20, 0x79, 0xee, 0x5f, 0x3e, 0xd7, 0xcb, 0x39, 0x48},
}

var Invert = encoding.ParseByte([]byte{
	0x00, 0x01, 0x8d, 0xf6, 0xcb, 0x52, 0x7b, 0xd1, 0xe8, 0x4f, 0x29, 0xc0, 0xb0, 0xe1, 0xe5, 0xc7,
	0x74, 0xb4, 0xaa, 0x4b, 0x99, 0x2b, 0x60, 0x5f, 0x58, 0x3f, 0xfd, 0xcc, 0xff, 0x40, 0xee, 0xb2,
	0x3a, 0x6e, 0x5a, 0xf1, 0x55, 0x4d, 0xa8, 0xc9, 0xc1, 0x0a, 0x98, 0x15, 0x30, 0x44, 0xa2, 0xc2,
	0x2c, 0x45, 0x92, 0x6c, 0xf3, 0x39, 0x66, 0x42, 0xf2, 0x35, 0x20, 0x6f, 0x77, 0xbb, 0x59, 0x19,
	0x1d, 0xfe, 0x37, 0x67, 0x2d, 0x31, 0xf5, 0x69, 0xa7, 0x64, 0xab, 0x13, 0x54, 0x25, 0xe9, 0x09,
	0xed, 0x5c, 0x05, 0xca, 0x4c, 0x24, 0x87, 0xbf, 0x18, 0x3e, 0x22, 0xf0, 0x51, 0xec, 0x61, 0x17,
	0x16, 0x5e, 0xaf, 0xd3, 0x49, 0xa6, 0x36, 0x43, 0xf4, 0x47, 0x91, 0xdf, 0x33, 0x93, 0x21, 0x3b,
	0x79, 0xb7, 0x97, 0x85, 0x10, 0xb5, 0xba, 0x3c, 0xb6, 0x70, 0xd0, 0x06, 0xa1, 0xfa, 0x81, 0x82,
	0x83, 0x7e, 0x7f, 0x80, 0x96, 0x73, 0xbe, 0x56, 0x9b, 0x9e, 0x95, 0xd9, 0xf7, 0x02, 0xb9, 0xa4,
	0xde, 0x6a, 0x32, 0x6d, 0xd8, 0x8a, 0x84, 0x72, 0x2a, 0x14, 0x9f, 0x88, 0xf9, 0xdc, 0x89, 0x9a,
	0xfb, 0x7c, 0x2e, 0xc3, 0x8f, 0xb8, 0x65, 0x48, 0x26, 0xc8, 0x12, 0x4a, 0xce, 0xe7, 0xd2, 0x62,
	0x0c, 0xe0, 0x1f, 0xef, 0x11, 0x75, 0x78, 0x71, 0xa5, 0x8e, 0x76, 0x3d, 0xbd, 0xbc, 0x86, 0x57,
	0x0b, 0x28, 0x2f, 0xa3, 0xda, 0xd4, 0xe4, 0x0f, 0xa9, 0x27, 0x53, 0x04, 0x1b, 0xfc, 0xac, 0xe6,
	0x7a, 0x07, 0xae, 0x63, 0xc5, 0xdb, 0xe2, 0xea, 0x94, 0x8b, 0xc4, 0xd5, 0x9d, 0xf8, 0x90, 0x6b,
	0xb1, 0x0d, 0xd6, 0xeb, 0xc6, 0x0e, 0xcf, 0xad, 0x08, 0x4e, 0xd7, 0xe3, 0x5d, 0x50, 0x1e, 0xb3,
	0x5b, 0x23, 0x38, 0x34, 0x68, 0x46, 0x03, 0x8c, 0xdd, 0x9c, 0x7d, 0xa0, 0xcd, 0x1a, 0x41, 0x1c,
})

var Secure = encoding.ParseByte([]byte{
	0x7a, 0xb3, 0xb9, 0xb6, 0x53, 0xb1, 0x26, 0x6e, 0xb9, 0x43, 0x86, 0xec, 0x94, 0x4b, 0x9e, 0x43,
	0x5d, 0x83, 0xd5, 0x57, 0x16, 0x4c, 0x44, 0xd5, 0x5d, 0x81, 0x7f, 0x79, 0xb3, 0x8d, 0xe6, 0xf8,
	0x0d, 0x59, 0xb3, 0x8d, 0x04, 0x4c, 0x8d, 0xec, 0xd9, 0xff, 0x7f, 0x7a, 0x7e, 0x9a, 0x92, 0x61,
	0x05, 0xfc, 0xe3, 0x1a, 0xed, 0x12, 0x1e, 0x52, 0x1a, 0xe5, 0x30, 0x34, 0xef, 0xe5, 0x97, 0xe5,
	0x9e, 0x69, 0x29, 0xd6, 0x29, 0xcd, 0xb8, 0x3a, 0xd2, 0xc4, 0x1b, 0xd1, 0x1c, 0x17, 0xc3, 0x3b,
	0x44, 0xba, 0xbd, 0x19, 0x57, 0x0c, 0x5a, 0x5f, 0xbb, 0x55, 0xb7, 0x4a, 0x5e, 0x3f, 0xa6, 0xfe,
	0x7f, 0xc8, 0x7e, 0x65, 0xbe, 0x1e, 0xb3, 0xbf, 0x8b, 0x85, 0x83, 0x83, 0x87, 0x12, 0xb2, 0x26,
	0xa6, 0xb4, 0xbc, 0xef, 0x9e, 0x9d, 0x6c, 0x9e, 0x90, 0x5e, 0x68, 0x25, 0x30, 0x97, 0x9f, 0x71,
	0xbf, 0x64, 0x65, 0x9a, 0x77, 0x18, 0xda, 0x60, 0x05, 0x97, 0x58, 0xb2, 0x88, 0xd5, 0x25, 0xa1,
	0x58, 0x00, 0xdb, 0x85, 0xca, 0x9f, 0x8d, 0x42, 0xdb, 0xbc, 0xb2, 0xb6, 0xe7, 0x85, 0x44, 0x78,
	0xac, 0xbe, 0x5b, 0x21, 0x45, 0xe9, 0x40, 0x4d, 0x73, 0x5f, 0xaf, 0x93, 0x4b, 0xbd, 0x45, 0x42,
	0x55, 0x37, 0xe2, 0xc8, 0xc8, 0x20, 0xd1, 0xee, 0x7e, 0x36, 0xc5, 0x28, 0x32, 0x37, 0x2f, 0xd4,
	0x86, 0x21, 0x79, 0x70, 0x08, 0xb6, 0x91, 0x89, 0xe3, 0xe5, 0x10, 0xe5, 0xc6, 0xcf, 0x02, 0xca,
	0xcc, 0xb9, 0xe1, 0x9a, 0x8c, 0x8c, 0xf3, 0x70, 0xec, 0x13, 0x0f, 0x00, 0x17, 0x7e, 0x57, 0x5c,
	0x09, 0x27, 0x27, 0x85, 0xa0, 0x87, 0x3f, 0x53, 0x74, 0xe3, 0xb1, 0xbd, 0xde, 0xb1, 0x8d, 0x61,
	0x4b, 0x84, 0x9c, 0xf3, 0x72, 0x04, 0x7e, 0x9c, 0x25, 0x3e, 0x98, 0x9e, 0x43, 0x8d, 0xb2, 0x9d,
})

var Mario = encoding.ParseByte([]byte{
	0x1b, 0x1e, 0xe7, 0x1b, 0x00, 0x1b, 0x4f, 0xe7, 0x07, 0xa8, 0xb7, 0x1c, 0x00, 0x06, 0x1c, 0x1c,
	0x30, 0xa9, 0xab, 0xaf, 0x54, 0x50, 0x36, 0x57, 0x65, 0x01, 0x17, 0x7c, 0x53, 0x99, 0xfb, 0x65,
	0x86, 0xb5, 0x33, 0x78, 0xc9, 0x80, 0xf5, 0x7f, 0x79, 0x7d, 0x87, 0x7a, 0x4d, 0x14, 0x49, 0x2b,
	0x66, 0xd5, 0xc8, 0x54, 0xa9, 0x57, 0x54, 0xab, 0xaa, 0x98, 0xa8, 0xa8, 0x32, 0x17, 0xd2, 0xcb,
	0xd4, 0xe7, 0x73, 0x1b, 0x51, 0xb3, 0xaf, 0x50, 0x51, 0x68, 0xac, 0x6b, 0xd7, 0x52, 0x1b, 0xd5,
	0x71, 0x75, 0x8a, 0x97, 0xc8, 0x36, 0x37, 0x33, 0x74, 0xce, 0x75, 0x4a, 0x77, 0x88, 0x8f, 0x77,
	0x1b, 0xff, 0xe4, 0xb5, 0xff, 0x1f, 0x1e, 0xfa, 0xb3, 0x4a, 0xb1, 0x4c, 0xfd, 0xfc, 0x4b, 0x01,
	0xca, 0xc8, 0xa0, 0x5b, 0x5e, 0xa1, 0x5b, 0xa6, 0x9d, 0xc8, 0x98, 0x84, 0xcb, 0x31, 0xca, 0xcb,
	0x33, 0xca, 0x33, 0xcc, 0x7b, 0x83, 0x98, 0xcb, 0xa2, 0x7f, 0xa3, 0xce, 0x34, 0x33, 0xcb, 0xcd,
	0xe7, 0xfd, 0xff, 0x03, 0x7f, 0x2d, 0x00, 0xb5, 0x05, 0xe5, 0xff, 0x02, 0x03, 0x06, 0xfc, 0x06,
	0x88, 0x8e, 0x74, 0x8b, 0x8c, 0x8e, 0x8c, 0x51, 0xc9, 0x03, 0x88, 0xc9, 0x8a, 0xc9, 0x70, 0xfc,
	0x94, 0x2b, 0xd4, 0x29, 0xae, 0x69, 0x6b, 0xaf, 0xb7, 0x91, 0xb7, 0xb7, 0x8b, 0x89, 0xd4, 0x75,
	0xd1, 0xc9, 0x98, 0x99, 0x61, 0xab, 0xaa, 0x61, 0x99, 0x66, 0x12, 0x65, 0x15, 0x2d, 0x2d, 0x33,
	0xb3, 0xb3, 0x7c, 0x86, 0x83, 0x7a, 0x7f, 0x78, 0xcf, 0x98, 0x81, 0x30, 0x7e, 0xcf, 0xc9, 0xc9,
	0x01, 0xa9, 0x57, 0xad, 0xe3, 0x80, 0xad, 0x61, 0x56, 0x53, 0x53, 0x28, 0x56, 0xa8, 0xc8, 0xae,
	0x18, 0x1d, 0x00, 0x06, 0xdf, 0x52, 0x52, 0xaf, 0x1d, 0x61, 0xe2, 0x60, 0xe2, 0xe6, 0xfa, 0xe2,
})

var Streebog = encoding.ParseByte([]byte{
	0xfc, 0xee, 0xdd, 0x11, 0xcf, 0x6e, 0x31, 0x16, 0xfb, 0xc4, 0xfa, 0xda, 0x23, 0xc5, 0x04, 0x4d,
	0xe9, 0x77, 0xf0, 0xdb, 0x93, 0x2e, 0x99, 0xba, 0x17, 0x36, 0xf1, 0xbb, 0x14, 0xcd, 0x5f, 0xc1,
	0xf9, 0x18, 0x65, 0x5a, 0xe2, 0x5c, 0xef, 0x21, 0x81, 0x1c, 0x3c, 0x42, 0x8b, 0x01, 0x8e, 0x4f,
	0x05, 0x84, 0x02, 0xae, 0xe3, 0x6a, 0x8f, 0xa0, 0x06, 0x0b, 0xed, 0x98, 0x7f, 0xd4, 0xd3, 0x1f,
	0xeb, 0x34, 0x2c, 0x51, 0xea, 0xc8, 0x48, 0xab, 0xf2, 0x2a, 0x68, 0xa2, 0xfd, 0x3a, 0xce, 0xcc,
	0xb5, 0x70, 0x0e, 0x56, 0x08, 0x0c, 0x76, 0x12, 0xbf, 0x72, 0x13, 0x47, 0x9c, 0xb7, 0x5d, 0x87,
	0x15, 0xa1, 0x96, 0x29, 0x10, 0x7b, 0x9a, 0xc7, 0xf3, 0x91, 0x78, 0x6f, 0x9d, 0x9e, 0xb2, 0xb1,
	0x32, 0x75, 0x19, 0x3d, 0xff, 0x35, 0x8a, 0x7e, 0x6d, 0x54, 0xc6, 0x80, 0xc3, 0xbd, 0x0d, 0x57,
	0xdf, 0xf5, 0x24, 0xa9, 0x3e, 0xa8, 0x43, 0xc9, 0xd7, 0x79, 0xd6, 0xf6, 0x7c, 0x22, 0xb9, 0x03,
	0xe0, 0x0f, 0xec, 0xde, 0x7a, 0x94, 0xb0, 0xbc, 0xdc, 0xe8, 0x28, 0x50, 0x4e, 0x33, 0x0a, 0x4a,
	0xa7, 0x97, 0x60, 0x73, 0x1e, 0x00, 0x62, 0x44, 0x1a, 0xb8, 0x38, 0x82, 0x64, 0x9f, 0x26, 0x41,
	0xad, 0x45, 0x46, 0x92, 0x27, 0x5e, 0x55, 0x2f, 0x8c, 0xa3, 0xa5, 0x7d, 0x69, 0xd5, 0x95, 0x3b,
	0x07, 0x58, 0xb3, 0x40, 0x86, 0xac, 0x1d, 0xf7, 0x30, 0x37, 0x6b, 0xe4, 0x88, 0xd9, 0xe7, 0x89,
	0xe1, 0x1b, 0x83, 0x49, 0x4c, 0x3f, 0xf8, 0xfe, 0x8d, 0x53, 0xaa, 0x90, 0xca, 0xd8, 0x85, 0x61,
	0x20, 0x71, 0x67, 0xa4, 0x2d, 0x2b, 0x09, 0x5b, 0xcb, 0x9b, 0x25, 0xd0, 0xbe, 0xe5, 0x6c, 0x52,
	0x59, 0xa6, 0x74, 0xd2, 0xe6, 0xf4, 0xb4, 0xc0, 0xd1, 0x66, 0xaf, 0xc2, 0x39, 0x4b, 0x63, 0xb6,
})

var F = encoding.ParseByte([]byte{
	0xa3, 0xd7, 0x09, 0x83, 0xf8, 0x48, 0xf6, 0xf4, 0xb3, 0x21, 0x15, 0x78, 0x99, 0xb1, 0xaf, 0xf9,
	0xe7, 0x2d, 0x4d, 0x8a, 0xce, 0x4c, 0xca, 0x2e, 0x52, 0x95, 0xd9, 0x1e, 0x4e, 0x38, 0x44, 0x28,
	0x0a, 0xdf, 0x02, 0xa0, 0x17, 0xf1, 0x60, 0x68, 0x12, 0xb7, 0x7a, 0xc3, 0xe9, 0xfa, 0x3d, 0x53,
	0x96, 0x84, 0x6b, 0xba, 0xf2, 0x63, 0x9a, 0x19, 0x7c, 0xae, 0xe5, 0xf5, 0xf7, 0x16, 0x6a, 0xa2,
	0x39, 0xb6, 0x7b, 0x0f, 0xc1, 0x93, 0x81, 0x1b, 0xee, 0xb4, 0x1a, 0xea, 0xd0, 0x91, 0x2f, 0xb8,
	0x55, 0xb9, 0xda, 0x85, 0x3f, 0x41, 0xbf, 0xe0, 0x5a, 0x58, 0x80, 0x5f, 0x66, 0x0b, 0xd8, 0x90,
	0x35, 0xd5, 0xc0, 0xa7, 0x33, 0x06, 0x65, 0x69, 0x45, 0x00, 0x94, 0x56, 0x6d, 0x98, 0x9b, 0x76,
	0x97, 0xfc, 0xb2, 0xc2, 0xb0, 0xfe, 0xdb, 0x20, 0xe1, 0xeb, 0xd6, 0xe4, 0xdd, 0x47, 0x4a, 0x1d,
	0x42, 0xed, 0x9e, 0x6e, 0x49, 0x3c, 0xcd, 0x43, 0x27, 0xd2, 0x07, 0xd4, 0xde, 0xc7, 0x67, 0x18,
	0x89, 0xcb, 0x30, 0x1f, 0x8d, 0xc6, 0x8f, 0xaa, 0xc8, 0x74, 0xdc, 0xc9, 0x5d, 0x5c, 0x31, 0xa4,
	0x70, 0x88, 0x61, 0x2c, 0x9f, 0x0d, 0x2b, 0x87, 0x50, 0x82, 0x54, 0x64, 0x26, 0x7d, 0x03, 0x40,
	0x34, 0x4b, 0x1c, 0x73, 0xd1, 0xc4, 0xfd, 0x3b, 0xcc, 0xfb, 0x7f, 0xab, 0xe6, 0x3e, 0x5b, 0xa5,
	0xad, 0x04, 0x23, 0x9c, 0x14, 0x51, 0x22, 0xf0, 0x29, 0x79, 0x71, 0x7e, 0xff, 0x8c, 0x0e, 0xe2,
	0x0c, 0xef, 0xbc, 0x72, 0x75, 0x6f, 0x37, 0xa1, 0xec, 0xd3, 0x8e, 0x62, 0x8b, 0x86, 0x10, 0xe8,
	0x08, 0x77, 0x11, 0xbe, 0x92, 0x4f, 0x24, 0xc5, 0x32, 0x36, 0x9d, 0xcf, 0xf3, 0xa6, 0xbb, 0xac,
	0x5e, 0x6c, 0xa9, 0x13, 0x57, 0x25, 0xb5, 0xe3, 0xbd, 0xa8, 0x3a, 0x01, 0x05, 0x59, 0x2a, 0x46,
})

// var DES = []byte{
// 	14, 4, 13, 1, 2, 15, 11, 8, 3, 10, 6, 12, 5, 9, 0, 7,
// 	0, 15, 7, 4, 14, 2, 13, 1, 10, 6, 12, 11, 9, 5, 3, 8,
// 	4, 1, 14, 8, 13, 6, 2, 11, 15, 12, 9, 7, 3, 10, 5, 0,
// 	15, 12, 8, 2, 4, 9, 1, 7, 5, 11, 3, 14, 10, 0, 6, 13,
// }
